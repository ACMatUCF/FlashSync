var search_data = {"index":{"info":[["DropboxAuthError","","DropboxAuthError.html","","<p>This is the error raised on Authentication failures.  Usually this means\none of three things\n<p>Your user …\n"],["DropboxClient","","DropboxClient.html","","<p>This is the Dropbox Client API you’ll be working with most often.  You\nneed to give it a DropboxSession …\n"],["DropboxClient::ChunkedUploader","","DropboxClient/ChunkedUploader.html","","<p>ChunkedUploader is responsible for uploading a large file to Dropbox in\nsmaller chunks. This allows large …\n"],["DropboxError","","DropboxError.html","","<p>This is the usual error raised on any Dropbox related Errors\n"],["DropboxNotModified","","DropboxNotModified.html","","<p>This is raised when you call metadata with a hash and that hash matches See\ndocumentation in metadata …\n"],["DropboxSession","","DropboxSession.html","","<p>DropboxSession is responsible for holding OAuth information.  It knows how\nto take your consumer key …\n"],["access_token","DropboxSession","DropboxSession.html#method-i-access_token","()","<p>Returns the access token, or nil if one hasn’t been acquired yet.\n"],["account_info","DropboxClient","DropboxClient.html#method-i-account_info","()","<p>Returns account info in a Hash object\n<p>For a detailed description of what this call returns, visit:\nwww.dropbox.com/developers/reference/api#account-info …\n"],["add_copy_ref","DropboxClient","DropboxClient.html#method-i-add_copy_ref","(to_path, copy_ref)","<p>Adds the file referenced by the copy ref to the specified path\n<p>Args:\n<p>copy_ref: A copy ref string that was …\n"],["assert_authorized","DropboxSession","DropboxSession.html#method-i-assert_authorized","()","<p>If we have an access token, then do nothing.  If not, throw a RuntimeError.\n"],["authorized?","DropboxSession","DropboxSession.html#method-i-authorized-3F","()","<p>Returns true if this Session has been authorized and has an access_token.\n"],["clear_access_token","DropboxSession","DropboxSession.html#method-i-clear_access_token","()","<p>Clears the access_token\n"],["commit_chunked_upload","DropboxClient","DropboxClient.html#method-i-commit_chunked_upload","(to_path, upload_id, overwrite=false, parent_rev=nil)",""],["create_copy_ref","DropboxClient","DropboxClient.html#method-i-create_copy_ref","(path)","<p>Creates and returns a copy ref for a specific file.  The copy ref can be\nused to instantly copy that …\n"],["delta","DropboxClient","DropboxClient.html#method-i-delta","(cursor=nil)","<p>A way of letting you keep a local representation of the Dropbox folder\nheirarchy.  You can periodically …\n"],["deserialize","DropboxSession","DropboxSession.html#method-c-deserialize","(ser)","<p>Takes a serialized DropboxSession YAML String and returns a new\nDropboxSession object\n"],["do_http_with_body","DropboxSession","DropboxSession.html#method-i-do_http_with_body","(uri, request, body)",""],["file_copy","DropboxClient","DropboxClient.html#method-i-file_copy","(from_path, to_path)","<p>Copy a file or folder to a new location.\n<p>Arguments:\n<p>from_path: The path to the file or folder to be copied. …\n"],["file_create_folder","DropboxClient","DropboxClient.html#method-i-file_create_folder","(path)","<p>Create a folder.\n<p>Arguments:\n<p>path: The path of the new folder.\n"],["file_delete","DropboxClient","DropboxClient.html#method-i-file_delete","(path)","<p>Deletes a file\n<p>Arguments:\n<p>path: The path of the file to delete\n"],["file_move","DropboxClient","DropboxClient.html#method-i-file_move","(from_path, to_path)","<p>Moves a file\n<p>Arguments:\n<p>from_path: The path of the file to be moved\n"],["finish","DropboxClient::ChunkedUploader","DropboxClient/ChunkedUploader.html#method-i-finish","(to_path, overwrite=false, parent_rev=nil)","<p>Completes a file upload\n<p>Args:\n<p>to_path: The directory path to upload the file to. If the destination\ndirectory …\n"],["get_access_token","DropboxSession","DropboxSession.html#method-i-get_access_token","()","<p>Returns the access token. If this DropboxSession doesn’t yet have an\naccess_token, it requests one using …\n"],["get_authorize_url","DropboxSession","DropboxSession.html#method-i-get_authorize_url","(callback=nil)","<p>This returns a URL that your user must visit to grant permissions to this\napplication.\n"],["get_chunked_uploader","DropboxClient","DropboxClient.html#method-i-get_chunked_uploader","(file_obj, total_size)","<p>Returns a ChunkedUploader object.\n<p>Args:\n<p>file_obj: The file-like object to be uploaded.  Must support .read() …\n"],["get_file","DropboxClient","DropboxClient.html#method-i-get_file","(from_path, rev=nil)","<p>Download a file\n<p>Args:\n<p>from_path: The path to the file to be downloaded\n"],["get_file_and_metadata","DropboxClient","DropboxClient.html#method-i-get_file_and_metadata","(from_path, rev=nil)","<p>Download a file and get its metadata.\n<p>Args:\n<p>from_path: The path to the file to be downloaded\n"],["get_request_token","DropboxSession","DropboxSession.html#method-i-get_request_token","()","<p>This returns a request token.  Requests one from the dropbox server using\nthe provided application key …\n"],["media","DropboxClient","DropboxClient.html#method-i-media","(path)","<p>Returns a direct link to a media file All of Dropbox’s API methods\nrequire OAuth, which may cause problems …\n"],["metadata","DropboxClient","DropboxClient.html#method-i-metadata","(path, file_limit=25000, list=true, hash=nil, rev=nil, include_deleted=false)","<p>Retrives metadata for a file or folder\n<p>Arguments:\n<p>path: The path to the file or folder.\n"],["new","DropboxClient","DropboxClient.html#method-c-new","(session, root=\"app_folder\", locale=nil)","<p>Initialize a new DropboxClient.  You need to give it a session which has\nbeen authorized. See documentation …\n"],["new","DropboxClient::ChunkedUploader","DropboxClient/ChunkedUploader.html#method-c-new","(client, file_obj, total_size)",""],["new","DropboxError","DropboxError.html#method-c-new","(error, http_response=nil, user_error=nil)",""],["new","DropboxSession","DropboxSession.html#method-c-new","(consumer_key, consumer_secret)","<p>consumer_key - Your Dropbox application’s “app key”.\n<p>consumer_secret - Your Dropbox application’s …\n\n"],["partial_chunked_upload","DropboxClient","DropboxClient.html#method-i-partial_chunked_upload","(data, upload_id=nil, offset=nil)",""],["put_file","DropboxClient","DropboxClient.html#method-i-put_file","(to_path, file_obj, overwrite=false, parent_rev=nil)","<p>Uploads a file to a server.  This uses the HTTP PUT upload method for\nsimplicity\n<p>Arguments:\n<p>to_path: The …\n"],["request_token","DropboxSession","DropboxSession.html#method-i-request_token","()","<p>Returns the request token, or nil if one hasn’t been acquired yet.\n"],["restore","DropboxClient","DropboxClient.html#method-i-restore","(path, rev)","<p>Restore a file to a previous revision.\n<p>Arguments:\n<p>path: The file to restore. Note that folders can’t be …\n"],["revisions","DropboxClient","DropboxClient.html#method-i-revisions","(path, rev_limit=1000)","<p>Retrive revisions of a file\n<p>Arguments:\n<p>path: The file to fetch revisions for. Note that revisions are not …\n"],["search","DropboxClient","DropboxClient.html#method-i-search","(path, query, file_limit=1000, include_deleted=false)","<p>Search directory for filenames matching query\n<p>Arguments:\n<p>path: The directory to search within\n"],["serialize","DropboxSession","DropboxSession.html#method-i-serialize","()","<p>serialize the DropboxSession. At DropboxSession’s state is capture in\nthree key/secret pairs.  Consumer …\n"],["set_access_token","DropboxSession","DropboxSession.html#method-i-set_access_token","(key, secret)","<p>Given a saved access token and secret, you set this Session to use that\ntoken and secret\n<p>token - this …\n"],["set_request_token","DropboxSession","DropboxSession.html#method-i-set_request_token","(key, secret)","<p>Given a saved request token and secret, set this location’s token and\nsecret\n<p>token - this is the request …\n"],["shares","DropboxClient","DropboxClient.html#method-i-shares","(path)","<p>Get a URL to share a media file Shareable links created on Dropbox are\ntime-limited, but don’t require …\n"],["thumbnail","DropboxClient","DropboxClient.html#method-i-thumbnail","(from_path, size='large')","<p>Download a thumbnail for an image.\n<p>Arguments:\n<p>from_path: The path to the file to be thumbnailed.\n"],["thumbnail_and_metadata","DropboxClient","DropboxClient.html#method-i-thumbnail_and_metadata","(from_path, size='large')","<p>Download a thumbnail for an image along with the image’s metadata.\n<p>Arguments:\n<p>from_path: The path to the …\n"],["to_s","DropboxError","DropboxError.html#method-i-to_s","()",""],["upload","DropboxClient::ChunkedUploader","DropboxClient/ChunkedUploader.html#method-i-upload","(chunk_size=4*1024*1024)","<p>Uploads data from this ChunkedUploader’s file_obj in chunks, until an\nerror occurs. Throws an exception …\n"]],"searchIndex":["dropboxautherror","dropboxclient","chunkeduploader","dropboxerror","dropboxnotmodified","dropboxsession","access_token()","account_info()","add_copy_ref()","assert_authorized()","authorized?()","clear_access_token()","commit_chunked_upload()","create_copy_ref()","delta()","deserialize()","do_http_with_body()","file_copy()","file_create_folder()","file_delete()","file_move()","finish()","get_access_token()","get_authorize_url()","get_chunked_uploader()","get_file()","get_file_and_metadata()","get_request_token()","media()","metadata()","new()","new()","new()","new()","partial_chunked_upload()","put_file()","request_token()","restore()","revisions()","search()","serialize()","set_access_token()","set_request_token()","shares()","thumbnail()","thumbnail_and_metadata()","to_s()","upload()"],"longSearchIndex":["dropboxautherror","dropboxclient","dropboxclient::chunkeduploader","dropboxerror","dropboxnotmodified","dropboxsession","dropboxsession#access_token()","dropboxclient#account_info()","dropboxclient#add_copy_ref()","dropboxsession#assert_authorized()","dropboxsession#authorized?()","dropboxsession#clear_access_token()","dropboxclient#commit_chunked_upload()","dropboxclient#create_copy_ref()","dropboxclient#delta()","dropboxsession::deserialize()","dropboxsession#do_http_with_body()","dropboxclient#file_copy()","dropboxclient#file_create_folder()","dropboxclient#file_delete()","dropboxclient#file_move()","dropboxclient::chunkeduploader#finish()","dropboxsession#get_access_token()","dropboxsession#get_authorize_url()","dropboxclient#get_chunked_uploader()","dropboxclient#get_file()","dropboxclient#get_file_and_metadata()","dropboxsession#get_request_token()","dropboxclient#media()","dropboxclient#metadata()","dropboxclient::new()","dropboxclient::chunkeduploader::new()","dropboxerror::new()","dropboxsession::new()","dropboxclient#partial_chunked_upload()","dropboxclient#put_file()","dropboxsession#request_token()","dropboxclient#restore()","dropboxclient#revisions()","dropboxclient#search()","dropboxsession#serialize()","dropboxsession#set_access_token()","dropboxsession#set_request_token()","dropboxclient#shares()","dropboxclient#thumbnail()","dropboxclient#thumbnail_and_metadata()","dropboxerror#to_s()","dropboxclient::chunkeduploader#upload()"]}}